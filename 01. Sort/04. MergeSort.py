"""
Теория
Суть алгоритма в делении массива на меньшие подмассивы, до тех пор, 
пока мы не получаем массив с одним элементом, который по умолчанию отсортирован.
Алгоритм:
- Получаем массив
- Если он <= 1, возвращаем его
- Если нет, то делим на две части
- Рекурсивно вызываем функцию для левой и правой части
- Объединяем результаты
- Возвращаем результат
"""

import random

MyList = [random.randint(-20,20) for i in range(20)]
print(f'Рандомный список до сортировки: {MyList}')

def MyMergeSort(arr: list):
    if len(arr) <= 1:
        return arr
    
    mid = len(arr) // 2
    left = arr[:mid]
    right = arr[mid:]

    # рекурсивно разбиваем левую и правую части
    left = MyMergeSort(left)
    right = MyMergeSort(right)
    # объявляю результирующий список
    result = []
    # объявляю два счетчика
    i = j = 0
    # объежинение левой и правой части
    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1

    # добавление оставшихся элементов
    result += left[i:]
    result += right[j:]

    return result

print(f'Отсортированный список: {MyMergeSort(MyList)}')

"""
Рандомный список до сортировки: [12, 13, 0, 16, 0, -15, -14, -5, 20, -16, -20, 11, -15, -4, -7, 5, 15, 7, 1, -13]
Отсортированный список: [-20, -16, -15, -15, -14, -13, -7, -5, -4, 0, 0, 1, 5, 7, 11, 12, 13, 15, 16, 20]
"""