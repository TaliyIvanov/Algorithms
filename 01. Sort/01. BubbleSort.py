"""
Теория
Принцип действий прост: обходим массив от начала до конца, 
попутно меняя местами неотсортированные соседние элементы. 
В результате первого прохода на последнее место «всплывёт» максимальный элемент. 
Теперь снова обходим неотсортированную часть массива (от первого элемента до 
предпоследнего) и меняем по пути неотсортированных соседей. 
Второй по величине элемент окажется на предпоследнем месте. 
Продолжая в том же духе, будем обходить всё уменьшающуюся неотсортированную 
часть массива, запихивая найденные максимумы в конец.
"""



import random
# создам рандомный список, включающий 20 элементов
# от -20 до 20
MyList = [random.randint(-20, 20) for i in range(20)]
print(f'Рандомный список до сортировки: {MyList}')

def MyBubbleSort(arr: list):
    for i in range(len(arr)):
        for j in range(len(arr)-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    
    return arr

print(f'Отсортированный список: {MyBubbleSort(MyList)}')

"""
Рандомный список до сортировки: [15, -14, -9, 1, 2, -2, -2, -3, -14, 8, -17, 2, 10, -9, -17, 2, 9, -1, 6, -12]
Отсортированный список: [-17, -17, -14, -14, -12, -9, -9, -3, -2, -2, -1, 1, 2, 2, 2, 6, 8, 9, 10, 15]
"""